<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="Java-Server">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../eclipse"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
    <path id="JUnit 4.libraryclasspath">
        <pathelement location="${ECLIPSE_HOME}/plugins/org.junit4_4.3.1/junit.jar"/>
    </path>
    <path id="Java-Server.classpath">
        <pathelement location="bin"/>
        <pathelement location="lib/dsn.jar"/>
        <pathelement location="lib/imap.jar"/>
        <pathelement location="lib/mailapi.jar"/>
        <pathelement location="lib/pop3.jar"/>
        <pathelement location="lib/smtp.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
    </path>
	
	<path id="build.classpath">
		<fileset dir="${basedir}">
			<include name="lib/*.jar"/>
		</fileset>
	</path>
	<pathconvert property="Java-Server.project.manifest.classpath" pathsep=" ">
		<path refid="build.classpath"/>
		<mapper>
			<chainedmapper>
				<flattenmapper/>
				<globmapper from="*.jar" to="../lib/*.jar"/>
			</chainedmapper>
		</mapper>
	</pathconvert>
	
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src" excludes="**/*.launch, **/*.java"/>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="test" excludes="**/*.launch, **/*.java"/>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin" quiet="true"/>
		<delete dir="dist" quiet="true"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="Java-Server.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="test"/>
            <classpath refid="Java-Server.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
	
	<target description="Build the server JAR file." name="makeJAR" depends="build">
		<mkdir dir="dist" />
		<mkdir dir="dist/bin" />
		<mkdir dir="dist/lib" />
		<copy todir="dist/lib">
			<fileset dir="lib" />
		</copy>
		<copy file="wow.conf" todir="dist"/>
		<copy file="Start_WOW.bat" todir="dist"/>
		<copy file="profiles.xml" tofile="dist/profiles.xml"/>
		<copy file="start" todir="dist"/>
		<copy file="icon.ico" todir="dist"/>
		<jar destfile="dist/bin/WOWd.jar">
			<fileset dir="bin" includes="wowServ/server/*, wowServ/wowBL/*, wowServLibs/*, mailClient/*"/>
		    <manifest>
		    	<attribute name="Main-Class" value="wowServ.server.Server"/>
		    	<attribute name="Class-Path" value="${Java-Server.project.manifest.classpath}"/>
		    </manifest>
		</jar>
	</target>
</project>